repositories {
    mavenCentral()
}

apply plugin: 'java-library'

if ( !hasProperty( 'buildNumber' ) ) {
    ext.buildNumber = defaultBuildNumber
}
version = "$baseVersion.$buildNumber"

def vertxVersion = "4.1.3"
def es4xVersion = "0.15.0"
def junitVersion = "5.7.2"
def junitPlatformVersion = "1.7.2"
def graalvmVersion = "21.2.0"
dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.26'
    implementation "io.vertx:vertx-core:$vertxVersion"
    implementation "io.reactiverse:es4x:$es4xVersion"

    runtimeOnly 'ch.qos.logback:logback-classic:1.2.3'
    runtimeOnly 'ch.qos.logback:logback-core:1.2.3'
    runtimeOnly "org.graalvm.sdk:graal-sdk:$graalvmVersion"
    runtimeOnly "org.graalvm.truffle:truffle-api:$graalvmVersion"
    runtimeOnly "org.graalvm.js:js:$graalvmVersion"
    runtimeOnly "org.graalvm.tools:profiler:$graalvmVersion"
    runtimeOnly "org.graalvm.tools:chromeinspector:$graalvmVersion"
    runtimeOnly "org.graalvm.compiler:compiler:$graalvmVersion"
    runtimeOnly "org.graalvm.compiler:compiler-management:$graalvmVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.vintage:junit-vintage-engine:$junitVersion"
    testImplementation "org.junit.platform:junit-platform-launcher:$junitPlatformVersion"
    testImplementation "org.junit.platform:junit-platform-runner:$junitPlatformVersion"
    testImplementation "io.vertx:vertx-unit:$vertxVersion"
    testImplementation "io.vertx:vertx-junit5:$vertxVersion"
    testImplementation 'org.assertj:assertj-core:3.20.2'
}

test {
    useJUnitPlatform()
}

java {
    toolchain {
        languageVersion.set( JavaLanguageVersion.of( 11 ) )
    }
}